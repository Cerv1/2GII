/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import NapakalakiGame.CultistPlayer;
import NapakalakiGame.Napakalaki;
import NapakalakiGame.Player;
import NapakalakiGame.Treasure;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JPanel;

/**
 *
 * @author Cervi
 */
public class PlayerView extends javax.swing.JPanel {
    
    private Player playerModel;
    private Napakalaki napakalakiModel=Napakalaki.getInstance();
    
    
    
    public void setPlayer(Player p){
        playerModel=p;
        lCombatLevel.setText(String.valueOf(p.getCombatLevel()));
        lEnemy.setText(p.getEnemy().getName());
        lLevel.setText(String.valueOf(p.getLevels()));
        lName.setText(p.getName());
        
        if(playerModel instanceof CultistPlayer)
            lSectario.setText("SI");
        else
            lSectario.setText("NO");
        
        if(p.getPendingBadConsequence()!=null)
           pendingBadConsequenceView1.setPendingBad(p.getPendingBadConsequence());
        
        this.fillTreasurePanel(visiblePanel,playerModel.getVisibleTreasures());
        this.fillTreasurePanel(hiddenPanel,playerModel.getHiddenTreasures());
        pendingBadConsequenceView1.repaint();
        repaint();
        revalidate();
        
        if(playerModel.canISteal())
            bStealPrevious.setEnabled(true);
        else
            bStealPrevious.setEnabled(false);
    }
    
    public void setNapakalakiModel(Napakalaki n){
        napakalakiModel=n;
    }
    
    public Napakalaki getNapakalakiModel(){
        return napakalakiModel;
    }
    
    private ArrayList<Treasure> getSelectedTreasures(JPanel aPanel) {
        // Se recorren los tesoros que contiene el panel,
        // almacenando en un vector aquellos que est치n seleccionados.
        // Finalmente se devuelve dicho vector.
        TreasureView tv;
        ArrayList<Treasure> output = new ArrayList();
        for (Component c : aPanel.getComponents()) {
            tv = (TreasureView) c;
            if ( tv.isSelected() )
                output.add ( tv.getTreasure() );
        }
        return output;
}
    
    private void fillTreasurePanel (JPanel aPanel, ArrayList<Treasure> aList) {
        // Se elimina la informaci칩n antigua, si la hubiera
        aPanel.removeAll();
        // Se recorre la lista de tesoros construyendo y a침adiendo sus vistas al panel
        for (Treasure t : aList) {
            TreasureView aTreasureView = new TreasureView();
            aTreasureView.setTreasure (t);
            aTreasureView.setVisible (true);
            aPanel.add (aTreasureView);
        }
        
    // Se fuerza la actualizaci칩n visual del panel
    aPanel.repaint();
    aPanel.revalidate();
}
    public void hidePending(){
        pendingBadConsequenceView1.setVisible(false);
    }
    
    public void showPending(){
        pendingBadConsequenceView1.setVisible(true);
    }
    /**
     * Creates new form PlayerView
     */
    public PlayerView() {
        initComponents();
        pendingBadConsequenceView1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lName = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lLevel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lCombatLevel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lEnemy = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lSectario = new javax.swing.JLabel();
        pendingBadConsequenceView1 = new GUI.PendingBadConsequenceView();
        bSteal = new javax.swing.JButton();
        bMakeVisible = new javax.swing.JButton();
        bDiscard = new javax.swing.JButton();
        bDiscardAll = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        visiblePanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        hiddenPanel = new javax.swing.JPanel();
        bStealPrevious = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 51, 0, 0);
        add(jLabel1, gridBagConstraints);

        lName.setText("jLabel2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 2, 0, 0);
        add(lName, gridBagConstraints);

        jLabel3.setText("Level:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 36, 0, 0);
        add(jLabel3, gridBagConstraints);

        lLevel.setText("jLabel4");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 13;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 6, 0, 0);
        add(lLevel, gridBagConstraints);

        jLabel5.setText("Combat Level:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 28, 0, 0);
        add(jLabel5, gridBagConstraints);

        lCombatLevel.setText("jLabel6");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 18;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 6, 0, 0);
        add(lCombatLevel, gridBagConstraints);

        jLabel7.setText("Enemy:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 51, 0, 0);
        add(jLabel7, gridBagConstraints);

        lEnemy.setText("jLabel8");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 2, 0, 0);
        add(lEnemy, gridBagConstraints);

        jLabel9.setText("Cultist:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 31, 0, 0);
        add(jLabel9, gridBagConstraints);

        jLabel10.setText("VisibleTreasures");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 0, 0);
        add(jLabel10, gridBagConstraints);

        jLabel11.setText("HiddenTreasures");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        add(jLabel11, gridBagConstraints);

        lSectario.setText("jLabel2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 13;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 6, 0, 0);
        add(lSectario, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 20;
        gridBagConstraints.ipadx = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        add(pendingBadConsequenceView1, gridBagConstraints);

        bSteal.setText("Steal Treasure");
        bSteal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bStealActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(27, 10, 0, 0);
        add(bSteal, gridBagConstraints);

        bMakeVisible.setText("Make Visible");
        bMakeVisible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bMakeVisibleActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 20, 11, 0);
        add(bMakeVisible, gridBagConstraints);

        bDiscard.setText("Discard Treasures");
        bDiscard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDiscardActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(27, 20, 0, 0);
        add(bDiscard, gridBagConstraints);

        bDiscardAll.setText("Discard All Treasures");
        bDiscardAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDiscardAllActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 11, 0);
        add(bDiscardAll, gridBagConstraints);

        visiblePanel.setAutoscrolls(true);
        visiblePanel.setLayout(new java.awt.GridLayout(1, 0));
        jScrollPane1.setViewportView(visiblePanel);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 21;
        gridBagConstraints.ipadx = 365;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 10, 0, 10);
        add(jPanel1, gridBagConstraints);

        hiddenPanel.setLayout(new java.awt.GridLayout(1, 0));
        jScrollPane2.setViewportView(hiddenPanel);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 21;
        gridBagConstraints.ipadx = 365;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 10);
        add(jPanel2, gridBagConstraints);

        bStealPrevious.setText("StealPrevious");
        bStealPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bStealPreviousActionPerformed(evt);
            }
        });
        add(bStealPrevious, new java.awt.GridBagConstraints());
    }// </editor-fold>//GEN-END:initComponents

    private void bStealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bStealActionPerformed
        if(playerModel.canISteal() && !playerModel.getEnemy().getHiddenTreasures().isEmpty()){
            Treasure t = playerModel.stealTreasure();
            TreasureView tv = new TreasureView();
            tv.setTreasure(t);
            hiddenPanel.add(tv);
            setPlayer(napakalakiModel.getCurrentPlayer());
            bSteal.setEnabled(false);
      }
    }//GEN-LAST:event_bStealActionPerformed

    private void bMakeVisibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bMakeVisibleActionPerformed
        ArrayList<Treasure> selHidden = getSelectedTreasures (hiddenPanel);
        napakalakiModel.makeTreasuresVisible(selHidden);
        setPlayer(napakalakiModel.getCurrentPlayer());
    }//GEN-LAST:event_bMakeVisibleActionPerformed

    private void bDiscardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDiscardActionPerformed
        ArrayList<Treasure> selHidden = getSelectedTreasures (hiddenPanel);
        ArrayList<Treasure> selVisible = getSelectedTreasures (visiblePanel);
        napakalakiModel.discardHiddenTreasures(selHidden);
        napakalakiModel.discardVisibleTreasures(selVisible);
        setPlayer(napakalakiModel.getCurrentPlayer());        
        napakalakiModel.getCurrentPlayer().dieIfNoTreasures();
    }//GEN-LAST:event_bDiscardActionPerformed

    private void bDiscardAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDiscardAllActionPerformed
        napakalakiModel.getCurrentPlayer().discardAllTreasures();
        setPlayer(napakalakiModel.getCurrentPlayer());
    }//GEN-LAST:event_bDiscardAllActionPerformed

    private void bStealPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bStealPreviousActionPerformed
        bStealPrevious.setEnabled(false);
        napakalakiModel.getCurrentPlayer().stealToPreviousPlayer();
        setPlayer(napakalakiModel.getCurrentPlayer());
        repaint();
    }//GEN-LAST:event_bStealPreviousActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton bDiscard;
    public javax.swing.JButton bDiscardAll;
    public javax.swing.JButton bMakeVisible;
    public javax.swing.JButton bSteal;
    private javax.swing.JButton bStealPrevious;
    private javax.swing.JPanel hiddenPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lCombatLevel;
    private javax.swing.JLabel lEnemy;
    private javax.swing.JLabel lLevel;
    private javax.swing.JLabel lName;
    private javax.swing.JLabel lSectario;
    private GUI.PendingBadConsequenceView pendingBadConsequenceView1;
    private javax.swing.JPanel visiblePanel;
    // End of variables declaration//GEN-END:variables
}
